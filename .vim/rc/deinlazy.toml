[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertEnter'
hook_source = '''
source ~/.vim/rc/plugins/deoplete.rc.vim
" call deoplete#enable()
'''

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = 'python'
hook_source = '''
" 	let g:deoplete#sources#jedi#server_timeout = 100
" 	let g:deoplete#sources#jedi#statement_length = 100
" 	let g:jedi#completions_enabled = 0
'''

[[plugins]]
repo = 'zchee/deoplete-zsh'
on_ft = 'zsh'

[[plugins]]
repo = 'Shougo/deoplete-clangx'
on_ft = ['c', 'cpp']
hook_source = '''
" 	call deoplete#custom#var('clangx', 'clang_binary', '/usr/bin/clang')
" 	call deoplete#custom#var('clangx', 'default_c_options', '')
" 	call deoplete#custom#var('clangx', 'default_cpp_options', '')
'''

[[plugins]]
repo = 'osyo-manga/vim-precious'
on_ft = 'toml'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'Shougo/context_filetype.vim'
on_ft = 'toml'
hook_source = '''
	if !exists('g:context_filetype#filetypes')
		let g:context_filetype#filetypes = {}
	endif
	let g:context_filetype#filetypes['toml'] = [
		\ {'filetype':'vim', 'start':'^\s*hook_\(add\|source\|post_source\)\s*=\s*'.'""'.'"', 'end':'""'.'"'},
		\ {'filetype':'vim', 'start':'^\s*hook_\(add\|source\|post_source\)\s*=\s*'."''"."'", 'end':"''"."'"},
		\ ]
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
hook_source = '''
source ~/.vim/rc/plugins/denite.rc.vim
'''
hook_add = '''
	nnoremap [Denite] <Nop>
	nmap <Space> [Denite]

	nnoremap [Denite]f :<C-u>Denite -mode=normal file_rec -path=
	nnoremap <silent> [Denite]g :<C-u>Denite -buffer-name=search -no-empty -mode=normal grep<CR>
	nnoremap <silent> [Denite]c :<C-u>DeniteCursorWord -buffer-name=search -no-empty -mode=normal grep<CR>
	nnoremap <silent> [Denite]h :<C-u>Denite -buffer-name=search -resume<CR>
	nnoremap <silent> [Denite]n :<C-u>Denite -buffer-name=search -resume -select=+1 -immediately<CR>
	nnoremap <silent> [Denite]p :<C-u>Denite -buffer-name=search -resume -select=-1 -immediately<CR>
"	nnoremap <silent> [Denite]n :<C-u>Denite -buffer-name=search -resume -cursor-pos=+1 -immediately<CR>
"	nnoremap <silent> [Denite]p :<C-u>Denite -buffer-name=search -resume -cursor-pos=-1 -immediately<CR>
	nnoremap <silent> [Denite]/ :<C-u>Denite -buffer-name=search -auto-highlight line<CR>
	nnoremap <silent> [Denite]* :<C-u>DeniteCursorWord -buffer-name=search -auto-highlight -mode=normal line<CR>
	nnoremap <silent> [Denite]r :<C-u>Denite -buffer-name=register register neoyank<CR>
	xnoremap <silent> [Denite]r :<C-u>Denite -default-action=replace -buffer-name=register register neoyank<CR>
	nnoremap <silent> [Denite]b :<C-u>Denite buffer<CR>
	nnoremap <silent> [Denite]t :<C-U>Denite filetype<CR>
'''

[[plugins]]
repo = 'cohama/lexima.vim'
on_event = 'InsertEnter'
hook_source = '''
source ~/.vim/rc/plugins/lexima.rc.vim
'''

# [[plugins]]
# repo = 'Shougo/vinarise.vim'
# on_cmd = 'Vinarise'
# TODO
# [[plugins]]
# repo = 'Shougo/deorise.nvim'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_event = 'InsertCharPre'
on_ft = 'snippet'
hook_source = '''
	imap <C-k> <Plug>(neosnippet_expand_or_jump)
	smap <C-k> <Plug>(neosnippet_expand_or_jump)
	xmap <C-k> <Plug>(neosnippet_expand_or_jump)
	if has('conceal')
		set conceallevel=2 concealcursor=niv
	endif
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

# TODO:NERDTreeからvimfilerに乗り換えたら
# [[plugins]]
# repo = 'Shougo/vimproc.vim'
# build = 'make'
# on_source = ['vimfiler.vim']

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_event = 'TextYankPost'
on_source = ['denite.nvim']

[[plugins]]
repo = 'Shougo/echodoc.vim'
on_event = 'CompleteDone'
hook_source = '''
	call echodoc#enable()
'''

[[plugins]]
repo = 'dbeniamine/todo.txt-vim'
on_ft = 'todo'

