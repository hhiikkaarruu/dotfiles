[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'roxma/nvim-yarp'
if = ''' ! has('nvim') '''

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = ''' ! has('nvim') '''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'nanotech/jellybeans.vim'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
	let g:lightline = {
				\ 'colorscheme': 'jellybeans',
				\ 'mode_map': {'c': 'NORMAL'},
				\ 'active': {
				\ 	'left': [ [ 'mode', 'paste' ], [ 'fugitive', 'filename', 'currenttag', 'currentbranch' ] ]
				\ },
				\ 'component': {
				\ 'lineinfo': "\u2668 %3l:%-2v",
				\ },
				\ 'component_function': {
				\ 'modified': 'LightlineModified',
				\ 'readonly': 'LightlineReadonly',
				\ 'fugitive': 'LightlineFugitive',
				\ 'filename': 'LightlineFilename',
				\ 'currenttag': 'LightlineZCurrenttag',
				\ 'currentbranch': 'LightlineCurrentbranch',
				\ 'fileformat': 'LightlineFileformat',
				\ 'filetype': 'LightlineFiletype',
				\ 'fileencoding': 'LightlineFileencoding',
				\ 'mode': 'LightlineMode'
				\ },
				\ 'separator': { 'left': "â–¶ï¸Ž", 'right': "â—€ï¸Ž"}, 
				\ 'subseparator': { 'left': "\u1433", 'right': "\u1438"}
				\ }

	function! LightlineModified()
		return &ft =~ 'help\|vimfiler\|gundo' ? '' : &modified ? '+' : &modifiable ? '' : '-'
	endfunction

	function! LightlineReadonly()
		return &ft !~? 'help\|vimfiler\|gundo' && &readonly ? 'ðŸ”’' : ''
	endfunction

	function! LightlineFilename()
		return ('' != LightlineReadonly() ? LightlineReadonly() . ' ' : '') .
					\ (&ft == 'vimfiler' ? vimfiler#get_status_string() :
					\  &ft == 'unite' ? unite#get_status_string() :
					\  &ft == 'vimshell' ? vimshell#get_status_string() : 
					\  '' != expand('%:t') ? expand('%:t') : '[No Name]') .
					\ ('' != LightlineModified() ? ' ' . LightlineModified() : '')
	endfunction

	function! LightlineCurrenttag()
		return tagbar#currenttag('%s', '')
	endfunction

	function! LightlineCurrentbranch()
		return vcs#info("<%s> %r:%b", "<%s> %r:%b")
	endfunction

	function! LightlineFugitive()
		if &ft !~? 'vimfiler\|gundo' && exists('*fugitive#head')
			return fugitive#head()
		else
			return ''
		endif
	endfunction

	function! LightlineFileformat()
		return winwidth(0) > 70 ? &fileformat : ''
	endfunction

	function! LightlineFiletype()
		return winwidth(0) > 70 ? (&filetype !=# '' ? &filetype : 'no ft') : ''
	endfunction

	function! LightlineFileencoding()
		return winwidth(0) > 70 ? (&fenc !=# '' ? &fenc : &enc) : ''
	endfunction

	function! LightlineMode()
		return winwidth(0) > 60 ? lightline#mode() : ''
	endfunction
'''

[[plugins]]
repo = 'majutsushi/tagbar'
hook_add = '''
	nnoremap <silent> <Leader>f :<C-u>Tagbar<CR>
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
	nnoremap <silent> <Leader>n :<C-u>NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'Shougo/vim-vcs'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
	let g:indent_guides_enable_on_vim_startup = 1
'''

[[plugins]]
repo = 'tyru/caw.vim'
hook_add = '''
	nmap <Leader>c <Plug>(caw:zeropos:comment)
	vmap <Leader>c <Plug>(caw:zeropos:comment)
	nmap <Leader>C <Plug>(caw:zeropos:uncomment)
	vmap <Leader>C <Plug>(caw:zeropos:uncomment)
'''

[[plugins]]
repo = 'cohama/lexima.vim'
hook_add = '''
   call lexima#add_rule({'at': '\%#)', 'char': '<C-l>', 'leave': 1})
   call lexima#add_rule({'at': '\%#"', 'char': '<C-l>', 'leave': 1})
   call lexima#add_rule({'at': "\%#'", 'char': '<C-l>', 'leave': 1})
   call lexima#add_rule({'at': '\%#]', 'char': '<C-l>', 'leave': 1})
   call lexima#add_rule({'at': '\%#}', 'char': '<C-l>', 'leave': 1})
   call lexima#add_rule({'at': '\%#`', 'char': '<C-l>', 'leave': 1})

   call lexima#add_rule({'at': '\%#.*[-0-9a-zA-Z_,:]', 'char': '(', 'input': '('})
   call lexima#add_rule({'at': '\%#.*[-0-9a-zA-Z_,:]', 'char': '"', 'input': '"'})
   call lexima#add_rule({'at': '\%#.*[-0-9a-zA-Z_,:]', 'char': "'", 'input': "'"})
   call lexima#add_rule({'at': '\%#.*[-0-9a-zA-Z_,:]', 'char': '[', 'input': '['})
   call lexima#add_rule({'at': '\%#.*[-0-9a-zA-Z_,:]', 'char': '{', 'input': '{'})
   call lexima#add_rule({'at': '\%#.*[-0-9a-zA-Z_,:]', 'char': '`', 'input': '`'})

   call lexima#add_rule({'at': '\%#\n\s*)', 'char': ')', 'input': ')', 'delete': ')'})
   call lexima#add_rule({'at': '\%#\n\s*"', 'char': '"', 'input': '"', 'delete': '"'})
   call lexima#add_rule({'at': "\%#\n\s*'", 'char': "'", 'input': "'", 'delete': "'"})
   call lexima#add_rule({'at': '\%#\n\s*]', 'char': ']', 'input': ']', 'delete': ']'})
   call lexima#add_rule({'at': '\%#\n\s*}', 'char': '}', 'input': '}', 'delete': '}'})
   call lexima#add_rule({'at': '\%#\n\s*`', 'char': '`', 'input': '`', 'delete': '`'})
'''

